{"version":3,"file":"virtual-grid.js","sources":["..//Users/patricklocal/code/virtual-grid/src/virtual-grid.js"],"sourcesContent":["import L from 'leaflet';\n\nvar VirtualGrid = L.Class.extend({\n  includes: L.Mixin.Events,\n\n  options: {\n    cellSize: 512,\n    updateInterval: 150\n  },\n\n  initialize: function (options) {\n    options = L.setOptions(this, options);\n  },\n\n  onAdd: function (map) {\n    this._map = map;\n    this._update = L.Util.limitExecByInterval(this._update, this.options.updateInterval, this);\n\n    this._map.addEventListener(this.getEvents(), this);\n\n    this._reset();\n    this._update();\n  },\n\n  onRemove: function () {\n    this._map.removeEventListener(this.getEvents(), this);\n    this._removeCells();\n  },\n\n  getEvents: function () {\n    var events = {\n      viewreset: this._reset,\n      moveend: this._update,\n      zoomend: this._onZoom\n    };\n\n    return events;\n  },\n\n  addTo: function (map) {\n    map.addLayer(this);\n    return this;\n  },\n\n  removeFrom: function (map) {\n    map.removeLayer(this);\n    return this;\n  },\n\n  _onZoom: function () {\n    var zoom = this._map.getZoom();\n\n    if (zoom > this.options.maxZoom || zoom < this.options.minZoom) {\n      this._removeCells();\n    } else if (!this._map.hasLayer(this)) {\n      this._update();\n    }\n  },\n\n  _reset: function () {\n    this._removeCells();\n\n    this._cells = {};\n    this._activeCells = {};\n    this._cellsToLoad = 0;\n    this._cellsTotal = 0;\n\n    this._resetWrap();\n  },\n\n  _resetWrap: function () {\n    var map = this._map;\n    var crs = map.options.crs;\n\n    if (crs.infinite) {\n      return;\n    }\n\n    var cellSize = this._getCellSize();\n\n    if (crs.wrapLng) {\n      this._wrapLng = [\n        Math.floor(map.project([0, crs.wrapLng[0]]).x / cellSize),\n        Math.ceil(map.project([0, crs.wrapLng[1]]).x / cellSize)\n      ];\n    }\n\n    if (crs.wrapLat) {\n      this._wrapLat = [\n        Math.floor(map.project([crs.wrapLat[0], 0]).y / cellSize),\n        Math.ceil(map.project([crs.wrapLat[1], 0]).y / cellSize)\n      ];\n    }\n  },\n\n  _getCellSize: function () {\n    return this.options.cellSize;\n  },\n\n  _update: function () {\n    if (!this._map) {\n      return;\n    }\n\n    var bounds = this._map.getPixelBounds();\n    var zoom = this._map.getZoom();\n    var cellSize = this._getCellSize();\n    var cellPadding = [cellSize / 2, cellSize / 2];\n\n    if (zoom > this.options.maxZoom || zoom < this.options.minZoom) {\n      return;\n    }\n\n    // cell coordinates range for the current view\n    var topLeft = bounds.min.subtract(cellPadding).divideBy(cellSize).floor();\n\n    topLeft.x = Math.max(topLeft.x, 0);\n    topLeft.y = Math.max(topLeft.y, 0);\n\n    var cellBounds = L.bounds(topLeft, bounds.max.add(cellPadding).divideBy(cellSize).floor());\n\n    // remove any present cells that are off the specified bounds\n    this._removeOtherCells(cellBounds);\n    this._addCells(cellBounds);\n\n    this.fire('cellsupdated');\n  },\n\n  _addCells: function (bounds) {\n    var queue = [];\n    var center = bounds.getCenter();\n    var zoom = this._map.getZoom();\n    var j, i, coords;\n\n    // create a queue of coordinates to load cells from\n    for (j = bounds.min.y; j <= bounds.max.y; j++) {\n      for (i = bounds.min.x; i <= bounds.max.x; i++) {\n        coords = new L.Point(i, j);\n        coords.z = zoom;\n\n        queue.push(coords);\n      }\n    }\n    var cellsToLoad = queue.length;\n\n    if (cellsToLoad === 0) {\n      return;\n    }\n\n    this._cellsToLoad += cellsToLoad;\n    this._cellsTotal += cellsToLoad;\n\n    // sort cell queue to load cells in order of their distance to center\n    queue.sort(function (a, b) {\n      return a.distanceTo(center) - b.distanceTo(center);\n    });\n\n    for (i = 0; i < cellsToLoad; i++) {\n      this._addCell(queue[i]);\n    }\n  },\n\n  // converts cell coordinates to its geographical bounds\n  _cellCoordsToBounds: function (coords) {\n    var map = this._map;\n    var cellSize = this.options.cellSize;\n\n    var nwPoint = coords.multiplyBy(cellSize);\n    var sePoint = nwPoint.add([cellSize, cellSize]);\n\n    var nw = map.unproject(nwPoint, coords.z).wrap();\n    var se = map.unproject(sePoint, coords.z).wrap();\n\n    return new L.LatLngBounds(nw, se);\n  },\n\n  // converts cell coordinates to key for the cell cache\n  _cellCoordsToKey: function (coords) {\n    return coords.x + ':' + coords.y;\n  },\n\n  // converts cell cache key to coordiantes\n  _keyToCellCoords: function (key) {\n    var kArr = key.split(':');\n    var x = parseInt(kArr[0], 10);\n    var y = parseInt(kArr[1], 10);\n\n    return new L.Point(x, y);\n  },\n\n  // remove any present cells that are off the specified bounds\n  _removeOtherCells: function (bounds) {\n    for (var key in this._cells) {\n      if (!bounds.contains(this._keyToCellCoords(key))) {\n        this._removeCell(key);\n      }\n    }\n  },\n\n  _removeCell: function (key) {\n    var cell = this._activeCells[key];\n\n    if (cell) {\n      delete this._activeCells[key];\n\n      if (this.cellLeave) {\n        this.cellLeave(cell.bounds, cell.coords);\n      }\n\n      this.fire('cellleave', {\n        bounds: cell.bounds,\n        coords: cell.coords\n      });\n    }\n  },\n\n  _removeCells: function () {\n    for (var key in this._cells) {\n      var bounds = this._cells[key].bounds;\n      var coords = this._cells[key].coords;\n\n      if (this.cellLeave) {\n        this.cellLeave(bounds, coords);\n      }\n\n      this.fire('cellleave', {\n        bounds: bounds,\n        coords: coords\n      });\n    }\n  },\n\n  _addCell: function (coords) {\n    // wrap cell coords if necessary (depending on CRS)\n    this._wrapCoords(coords);\n\n    // generate the cell key\n    var key = this._cellCoordsToKey(coords);\n\n    // get the cell from the cache\n    var cell = this._cells[key];\n    // if this cell should be shown as isnt active yet (enter)\n\n    if (cell && !this._activeCells[key]) {\n      if (this.cellEnter) {\n        this.cellEnter(cell.bounds, coords);\n      }\n\n      this.fire('cellenter', {\n        bounds: cell.bounds,\n        coords: coords\n      });\n\n      this._activeCells[key] = cell;\n    }\n\n    // if we dont have this cell in the cache yet (create)\n    if (!cell) {\n      cell = {\n        coords: coords,\n        bounds: this._cellCoordsToBounds(coords)\n      };\n\n      this._cells[key] = cell;\n      this._activeCells[key] = cell;\n\n      if (this.createCell) {\n        this.createCell(cell.bounds, coords);\n      }\n\n      this.fire('cellcreate', {\n        bounds: cell.bounds,\n        coords: coords\n      });\n    }\n  },\n\n  _wrapCoords: function (coords) {\n    coords.x = this._wrapLng ? L.Util.wrapNum(coords.x, this._wrapLng) : coords.x;\n    coords.y = this._wrapLat ? L.Util.wrapNum(coords.y, this._wrapLat) : coords.y;\n  }\n});\n\nexport default VirtualGrid;\n"],"names":[],"mappings":"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"}